-- H2 Integration Test Schema
-- This schema matches the JPA entity structure for integration testing

-- Create sequences
CREATE SEQUENCE seq_query START WITH 1 INCREMENT BY 100;

-- Create QUERY table that matches the expected JPA structure
-- This includes:
-- - Fields from StandardQuery (concrete entity)
-- - Fields from Query (abstract parent with @Entity)
-- - Fields from BaseAuditEntity (@MappedSuperclass, NO @Entity)
-- - Discriminator column for inheritance
CREATE TABLE query (
    -- Primary key and identity
    query_id BIGINT NOT NULL PRIMARY KEY,
    
    -- Discriminator column for inheritance
    query_type_code INTEGER,
    
    -- Fields from Query class
    period_from DATE NOT NULL,
    period_to DATE,
    status_code INTEGER,
    is_periodic CHAR(1) NOT NULL,
    
    -- Fields from StandardQuery class
    description VARCHAR(500),
    priority_level INTEGER,
    
    -- Fields from BaseAuditEntity (@MappedSuperclass)
    version BIGINT,
    created_time TIMESTAMP,
    modified_time TIMESTAMP
);

-- Create QUERY_RESPONSE table for relationship testing
CREATE TABLE query_response (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    response_text VARCHAR(1000),
    response_code VARCHAR(50),
    query_id BIGINT,
    CONSTRAINT fk_query_response_query FOREIGN KEY (query_id) REFERENCES query(query_id)
);

-- Insert some test data
INSERT INTO query (
    query_id, query_type_code, period_from, period_to, status_code, 
    is_periodic, description, priority_level, version, created_time, modified_time
) VALUES 
(1, 1, '2024-01-01', '2024-12-31', 1, 'A', 'Test Standard Query', 5, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
(2, 1, '2024-06-01', null, 2, 'N', 'Another Test Query', 3, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

INSERT INTO query_response (response_text, response_code, query_id) VALUES 
('Response to query 1', 'OK', 1),
('Response to query 2', 'PENDING', 2);

-- Verify schema was created correctly
SELECT TABLE_NAME, COLUMN_NAME, DATA_TYPE, IS_NULLABLE 
FROM INFORMATION_SCHEMA.COLUMNS 
WHERE TABLE_SCHEMA = 'PUBLIC' 
  AND TABLE_NAME IN ('QUERY', 'QUERY_RESPONSE')
ORDER BY TABLE_NAME, ORDINAL_POSITION;